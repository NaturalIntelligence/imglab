var dlib_header = "<?xml version='1.0' encoding='ISO-8859-1'?>\n"
    +"<?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?>\n"
    +"<dataset>\n"
    +"<name>dlib face detection dataset generated by ImgLab</name>\n"
    +"<comment>\n"
    +"   This dataset is manually crafted or adjusted using ImgLab web tool\n"
    +"   Check more detail on https://github.com/NaturalIntelligence/imglab\n"
    +"</comment>\n"
    +"<images>\n"

/*var dlib_data = "  <image file='#FILENAME#'>"
    
               +"  </image>"
var dlib_box_data = +"    <box top='130' left='129' width='92' height='91'/>"*/
var dlib_footer = "</images>"
             +"</dataset>";

//create face data xml file for dlib
//face data xml file can have data for multiple images
//for each image there can be multiple labelled box
//each labelled box can have multiple feature points called parts
function toDlib(imgs){
    var imgXMLStr = "";
    var img_keys = Object.keys(imgs);
    for(var img_i in img_keys){
        var img = imgs [ img_keys[img_i] ];
        imgXMLStr += "\t<image file='"+ img_keys[img_i] +"'>\n";
        var boxes = img.boxes;
        if(boxes){
            var b_keys = Object.keys(boxes);
            for(var box_i in b_keys){
                var box = boxes [ b_keys[box_i] ];
                var l = box.left, t = box.top;
                imgXMLStr += "\t\t<box top='"+t+"' left='"+l+"' width='"+box.width+"' height='"+box.height+"'>\n";
                imgXMLStr += "\t\t\t<label>"+b_keys[box_i]+"</label>\n";
                //Add points information
                var points = box.points;
                if(points){
                    var p_keys = Object.keys(points);
                    for(var point_i in p_keys){
                        var point = points [ p_keys[point_i] ];
                        imgXMLStr += "\t\t\t<part name='"+p_keys[point_i]+"' x='"+(point.x + l)+"' y='"+(point.y + t)+"'/>\n";
                    }
                }
                imgXMLStr += "\t\t</box>\n"
            }
        }
        imgXMLStr += "\t</image>\n";
    }

    return dlib_header + imgXMLStr + dlib_footer;
}

/*PTS file contains landmark points location without label and of single label box only  */
function toDlibPts(boxEl){
    var data = "version: 1\n"
            +"n_points:  "+boxEl.children().length+"\n"
            +"{\n";
    var l = boxEl.position().left, t = boxEl.position().top;
    boxEl.children().each(function(){
        data += ($(this).position().left + l ) + " " + ($(this).position().top + t) + "\n";
    });

    data += "}";

    return data;
}